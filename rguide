#!/usr/bin/env python3

import argparse
import json
from oglaf import TomeOfKnowledge


json_archive    = 'archive.json'
json_tags       = 'tags.json'


parser = argparse.ArgumentParser(description='Build an Oglaf reading guide based on tags.')
parser.add_argument('-af', metavar='filename', action='store',
    help='Archive file - Provide a custom JSON archive file instead of the default "' + json_archive + '"')
parser.add_argument('-tf', metavar='filename', action='store',
    help='Tag file - Provide a custom JSON tag file instead of the default "' + json_tags + '"')
parser.add_argument('-t', '-tag', action='append', metavar='word', required=True,
    help='Term relevant to your activity, can be specified more than once (logical AND)')
args = parser.parse_args()

if args.af:
    json_archive = args.af
if args.tf:
    json_tags = args.tf


tome = TomeOfKnowledge( archive_file = json_archive, tags_file = json_tags )


# Generate list of titles containing all tags
titles = list()
for title in tome.titles.keys():
    matched_all = True
    for tag in args.t:
        ltag = tag.lower()
        if ltag in tome.lctags.keys():
            proper_tag = tome.lctags[ltag]
            if proper_tag not in tome.titles[title]['tags']:
                matched_all = False
                break
        else:
            matched_all = False
            break

    if matched_all:
        titles.append(title)


# Generate URL list in ascending order based on title list
reading_list = dict()
for title in titles:
    order = tome.titles[title]['publishOrder']
    reading_list[order] = dict()
    reading_list[order]['title'] = title
    reading_list[order]['urls'] = tome.titles[title]['urls']

# Print results
print("You're searching for: {}".format(', '.join(args.t)))
if len(reading_list) == 0:
    print("Sorry, there are no titles matching all your tags.")
    quit()

print("The following list shows the titles and URLs for matching strips, in publication date order.  Enjoy!\n")
for entry in sorted(reading_list.keys()):
    print(reading_list[entry]['title'])
    for url in reading_list[entry]['urls']:
        print("\t" + url)

